; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33523.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7675634B_concurrencysal@h DB 01H
__282CC87C_sal@h DB 01H
__19860494_vadefs@h DB 01H
__C8ACCAF0_vcruntime@h DB 01H
__2C718FED_xkeycheck@h DB 01H
__79AE529B_yvals_core@h DB 01H
__DFFD44CD_limits@h DB 01H
__0FA955A4_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__D7450E30_vcruntime_new@h DB 01H
__DAC01E85_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__EED3CEB3_crtdefs@h DB 01H
__4E468772_use_ansi@h DB 01H
__3D06C1E9_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__8B467756_cstdlib DB 01H
__B548B53B_xtr1common DB 01H
__CFA4C8AE_intrin0@inl@h DB 01H
__F7FE77B8_intrin0@h DB 01H
__4A96C6CB_cmath DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__6CDBED48_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__00CAB983_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__C7D4DFB6_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__F6503B1B_cwchar DB 01H
__B590BE2D_iosfwd DB 01H
__2E8DADFB_cstddef DB 01H
__6CB31578_initializer_list DB 01H
__618B6AF2_stdint@h DB 01H
__3618962B_cstdint DB 01H
__62D84926_type_traits DB 01H
__BC4BF2DD_utility DB 01H
__237F630A___msvc_iter_core@hpp DB 01H
__0D53120F_xutility DB 01H
__1CFFA54F_iterator DB 01H
__F7972D0B_share@h DB 01H
__0DE824BF___msvc_system_error_abi@hpp DB 01H
__F1FA99B3_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__092318BE_eh@h DB 01H
__D22E1BD7_vcruntime_exception@h DB 01H
__268CA025_exception DB 01H
__37242F2B___msvc_sanitizer_annotate_container@hpp DB 01H
__B9985323_float@h DB 01H
__1F9F26CF_cfloat DB 01H
__79796BAB_limits DB 01H
__3E18ED98_new DB 01H
__2C802CF3_xatomic@h DB 01H
__D6DE911E_xmemory DB 01H
__A20D1782_xstring DB 01H
__AFC29A78_stdexcept DB 01H
__3A368CCB_xcall_once@h DB 01H
__9593D4E6_xerrc@h DB 01H
__0A9237D2_time@h DB 01H
__8C255AC3_ctime DB 01H
__BB97F14E_xtimec@h DB 01H
__2F08B0C1_xthreads@h DB 01H
__124C3769_atomic DB 01H
__856B9EEB_system_error DB 01H
__37918595_vcruntime_typeinfo@h DB 01H
__7D8CE116_typeinfo DB 01H
__C5D76725_memory DB 01H
__E992302A_xfacet DB 01H
__EB88AD34___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__63100AEF_cctype DB 01H
__791C33B7_locale@h DB 01H
__18EAAB87_clocale DB 01H
__620502DE_xlocinfo DB 01H
__7D3363B3_xlocale DB 01H
__5BE075CD_xiosbase DB 01H
__AD6222C4_streambuf DB 01H
__E3B405A4_xlocnum DB 01H
__C6D5D78E_ios DB 01H
__6E23B977_ostream DB 01H
__0DF38C4D_istream DB 01H
__6F2A6810_iostream DB 01H
__CC40E2F1_algorithm DB 01H
__AB4B9627_Source@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??$swap@H$0A@@std@@YAXAEAH0@Z			; std::swap<int,0>
PUBLIC	?FillWithRandomNumbers@@YAXQEAHH@Z		; FillWithRandomNumbers
PUBLIC	?SortTheArray@@YAXQEAHH@Z			; SortTheArray
PUBLIC	main
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0BB@LONHJONN@Before?5sorting?3?6@		; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_0BA@EJIJEFIM@After?5sorting?3?6@		; `string'
EXTRN	__imp_srand:PROC
EXTRN	__imp_rand:PROC
EXTRN	strlen:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp__time64:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+34
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z DD imagerel $LN6
	DD	imagerel $LN6+42
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$time DD	imagerel time
	DD	imagerel time+36
	DD	imagerel $unwind$time
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@H$0A@@std@@YAXAEAH0@Z DD imagerel $LN6
	DD	imagerel $LN6+49
	DD	imagerel $unwind$??$swap@H$0A@@std@@YAXAEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FillWithRandomNumbers@@YAXQEAHH@Z DD imagerel $LN11
	DD	imagerel $LN11+120
	DD	imagerel $unwind$?FillWithRandomNumbers@@YAXQEAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SortTheArray@@YAXQEAHH@Z DD imagerel $LN23
	DD	imagerel $LN23+157
	DD	imagerel $unwind$?SortTheArray@@YAXQEAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN18
	DD	imagerel $LN18+257
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN42
	DD	imagerel $LN42+473
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+59
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN4
	DD	imagerel $LN4+68
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+61
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN9
	DD	imagerel $LN9+154
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+52
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN4
	DD	imagerel $LN4+30
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAH@std@@YA$$QEAHAEAH@Z DD imagerel $LN6
	DD	imagerel $LN6+30
	DD	imagerel $unwind$??$move@AEAH@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT ??_C@_0BA@EJIJEFIM@After?5sorting?3?6@
CONST	SEGMENT
??_C@_0BA@EJIJEFIM@After?5sorting?3?6@ DB 'After sorting:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LONHJONN@Before?5sorting?3?6@
CONST	SEGMENT
??_C@_0BB@LONHJONN@Before?5sorting?3?6@ DB 'Before sorting:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAH@std@@YA$$QEAHAEAH@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 04H
	DB	'X'
	DB	00H
	DB	'r'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0cH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 061411H
	DD	086414H
	DD	073414H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	'f'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 08H
	DB	019H, 02H
	DB	00H
	DB	0c8H
	DB	04H
	DB	0a9H, 02H
	DB	02H
	DB	'L'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	'm', 06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	030H
	DB	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 081619H
	DD	0d3416H
	DD	0f0125216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	041919H
	DD	0c340aH
	DD	07006920aH
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SortTheArray@@YAXQEAHH@Z DD 0c1d01H
	DD	0b741dH
	DD	0a641dH
	DD	09541dH
	DD	08341dH
	DD	0f019321dH
	DD	0c015e017H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FillWithRandomNumbers@@YAXQEAHH@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@H$0A@@std@@YAXAEAH0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$time DD	020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 020601H
	DD	030023206H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 48
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 128  :         explicit __CLR_OR_THIS_CALL operator bool() const {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__6E23B977_ostream
	call	__CheckForDebuggerJustMyCode
	mov	al, BYTE PTR [rbx+8]

; 129  :             return _Ok;
; 130  :         }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 113  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__6E23B977_ostream
	call	__CheckForDebuggerJustMyCode
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN2@sentry

; 114  : #if !_HAS_EXCEPTIONS
; 115  :             const bool _Zero_uncaught_exceptions = true;
; 116  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 117  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909
; 118  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 119  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 120  : #endif // ^^^ !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION ^^^
; 121  : 
; 122  :             if (_Zero_uncaught_exceptions) {
; 123  :                 this->_Myostr._Osfx();

	mov	rcx, QWORD PTR [rbx]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN2@sentry:

; 124  :             }
; 125  :         }

	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 96   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

$LN9:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rsi, rcx
	lea	rcx, OFFSET FLAT:__6E23B977_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rdx, rbx
	mov	rcx, rsi
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	npad	1

; 97   :             if (!_Ostr.good()) {

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	xor	edi, edi
	test	al, al
	je	SHORT $LN1@sentry

; 98   :                 _Ok = false;
; 99   :                 return;
; 100  :             }
; 101  : 
; 102  :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ

; 103  :             if (!_Tied || _Tied == &_Ostr) {

	test	rax, rax
	je	SHORT $LN4@sentry
	cmp	rax, rbx
	je	SHORT $LN4@sentry

; 105  :                 return;
; 106  :             }
; 107  : 
; 108  :             _Tied->flush();

	mov	rcx, rax
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 109  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	mov	dil, al
	jmp	SHORT $LN1@sentry
$LN4@sentry:

; 104  :                 _Ok = true;

	mov	dil, 1
$LN1@sentry:

; 110  :         }

	mov	BYTE PTR [rsi+8], dil
	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Ostr$ = 56
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 82   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__6E23B977_ostream
	call	__CheckForDebuggerJustMyCode

; 83   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ

; 84   :             if (_Rdbuf) {

	test	rax, rax
	je	SHORT $LN2@Sentry_bas

; 85   :                 _Rdbuf->_Unlock();

	mov	rdx, QWORD PTR [rax]
	mov	rcx, rax
	call	QWORD PTR [rdx+16]
	npad	1
$LN2@Sentry_bas:

; 86   :             }
; 87   :         }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 75   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__6E23B977_ostream
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR [rdi], rbx
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	rax, rax
	je	SHORT $LN2@Sentry_bas

; 76   :             const auto _Rdbuf = _Myostr.rdbuf();
; 77   :             if (_Rdbuf) {
; 78   :                 _Rdbuf->_Lock();

	mov	rdx, QWORD PTR [rax]
	mov	rcx, rax
	call	QWORD PTR [rdx+8]
$LN2@Sentry_bas:

; 79   :             }
; 80   :         }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 48
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 1010 :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__6E23B977_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx]
	mov	dl, 10
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	mov	dl, al
	mov	rcx, rbx
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	mov	rcx, rbx
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	mov	rax, rbx

; 1011 :     _Ostr.put(_Ostr.widen('\n'));
; 1012 :     _Ostr.flush();
; 1013 :     return _Ostr;
; 1014 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_Ok$ = 32
_Ostr$ = 96
_Val$ = 104
_State$ = 112
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 766  : basic_ostream<char, _Traits>& operator<<(basic_ostream<char, _Traits>& _Ostr, const char* _Val) {

$LN42:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
	mov	r12, rdx
	mov	rdi, rcx
	lea	rcx, OFFSET FLAT:__6E23B977_ostream
	call	__CheckForDebuggerJustMyCode

; 767  :     // insert NTBS into char stream
; 768  :     using _Elem = char;
; 769  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 770  : 
; 771  :     ios_base::iostate _State = ios_base::goodbit;

	xor	esi, esi
	mov	DWORD PTR _State$[rsp], esi

; 772  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

	mov	rcx, r12
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	r15, rax

; 773  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	mov	r8, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [r8+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN17@operator
	mov	rcx, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, r15
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	mov	r14, rax
	sub	r14, r15
	jmp	SHORT $LN18@operator
$LN17@operator:
	xor	r14d, r14d
$LN18@operator:

; 774  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, rdi
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 775  : 
; 776  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	test	al, al
	jne	SHORT $LN8@operator

; 777  :         _State |= ios_base::badbit;

	mov	esi, 4

; 778  :     } else { // state okay, insert

	jmp	$LN22@operator
$LN8@operator:

; 779  :         _TRY_IO_BEGIN
; 780  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN31@operator
$LL4@operator:

; 781  :             for (; 0 < _Pad; --_Pad) { // pad on left

	test	r14, r14
	jle	SHORT $LN31@operator

; 782  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	bl, al
	mov	rcx, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	rcx, rax
	mov	dl, bl
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	ebx, eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	ecx, eax
	mov	edx, ebx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	test	al, al
	je	SHORT $LN2@operator

; 783  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	esi, 4

; 784  :                     break;

	jmp	SHORT $LN39@operator
$LN2@operator:

; 781  :             for (; 0 < _Pad; --_Pad) { // pad on left

	dec	r14
	jmp	SHORT $LL4@operator
$LN31@operator:

; 785  :                 }
; 786  :             }
; 787  :         }
; 788  : 
; 789  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	rcx, rax
	mov	r8, r15
	mov	rdx, r12
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	cmp	rax, r15
	jne	SHORT $LN38@operator
$LL34@operator:

; 790  :             _State |= ios_base::badbit;
; 791  :         }
; 792  : 
; 793  :         if (_State == ios_base::goodbit) {
; 794  :             for (; 0 < _Pad; --_Pad) { // pad on right

	test	r14, r14
	jle	SHORT $LN6@operator

; 795  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	bl, al
	mov	rcx, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rdi
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	rcx, rax
	mov	dl, bl
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	ebx, eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	ecx, eax
	mov	edx, ebx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	test	al, al
	je	SHORT $LN5@operator
$LN38@operator:

; 796  :                     _State |= ios_base::badbit; // insertion failed, quit
; 797  :                     break;
; 798  :                 }
; 799  :             }
; 800  :         }
; 801  : 
; 802  :         _Ostr.width(0);

	or	esi, 4
$LN39@operator:
	mov	DWORD PTR _State$[rsp], esi
$LN6@operator:
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdi
	xor	edx, edx
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN22@operator
$LN5@operator:

; 790  :             _State |= ios_base::badbit;
; 791  :         }
; 792  : 
; 793  :         if (_State == ios_base::goodbit) {
; 794  :             for (; 0 < _Pad; --_Pad) { // pad on right

	dec	r14
	jmp	SHORT $LL34@operator
$LN23@operator:
	mov	rdi, QWORD PTR _Ostr$[rsp]
	mov	esi, DWORD PTR _State$[rsp]
$LN22@operator:

; 803  :         _CATCH_IO_(ios_base, _Ostr)
; 804  :     }
; 805  : 
; 806  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdi
	xor	r8d, r8d
	mov	edx, esi
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1

; 807  :     return _Ostr;

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, rdi

; 808  : }

	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
_Ostr$ = 96
_Val$ = 104
_State$ = 112
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogspy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
_Ostr$ = 96
_Val$ = 104
_State$ = 112
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 803  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Ogspy
; File C:\Users\jhall\Desktop\Project2\Project2\Source.cpp
;	COMDAT main
_TEXT	SEGMENT
data$ = 32
__$ArrayPad$ = 72
main	PROC						; COMDAT

; 43   : int main() {

$LN18:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	lea	rcx, OFFSET FLAT:__AB4B9627_Source@cpp
	call	__CheckForDebuggerJustMyCode
	mov	edx, 10
	lea	rcx, QWORD PTR data$[rsp]
	call	?FillWithRandomNumbers@@YAXQEAHH@Z	; FillWithRandomNumbers
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??_C@_0BB@LONHJONN@Before?5sorting?3?6@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	xor	ebx, ebx
	mov	edi, ebx
$LL4@main:

; 44   :     const int SIZE = 10;
; 45   :     int data[SIZE];
; 46   : 
; 47   :     FillWithRandomNumbers(data, SIZE);
; 48   : 
; 49   :     std::cout << "Before sorting:\n";
; 50   :     for (int i = 0; i < SIZE; ++i)
; 51   :     {
; 52   :         std::cout << data[i] << " ";

	mov	edx, DWORD PTR data$[rsp+rdi*4]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	inc	rdi
	cmp	rdi, 10
	jl	SHORT $LL4@main

; 53   :     }
; 54   : 
; 55   :     std::cout << std::endl;

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 56   : 
; 57   :     SortTheArray(data, SIZE);

	mov	edx, 10
	lea	rcx, QWORD PTR data$[rsp]
	call	?SortTheArray@@YAXQEAHH@Z		; SortTheArray

; 58   : 
; 59   :     std::cout << "After sorting:\n";

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??_C@_0BA@EJIJEFIM@After?5sorting?3?6@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LL7@main:

; 60   :     for (int i = 0; i < SIZE; ++i) {
; 61   :         std::cout << data[i] << " ";

	mov	edx, DWORD PTR data$[rsp+rbx*4]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	inc	rbx
	cmp	rbx, 10
	jl	SHORT $LL7@main

; 62   :     }
; 63   :     std::cout << std::endl;

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 64   : 
; 65   :     return 0;

	xor	eax, eax

; 66   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Users\jhall\Desktop\Project2\Project2\Source.cpp
;	COMDAT ?SortTheArray@@YAXQEAHH@Z
_TEXT	SEGMENT
data$ = 64
size$ = 72
?SortTheArray@@YAXQEAHH@Z PROC				; SortTheArray, COMDAT

; 23   : {

$LN23:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	QWORD PTR [rax+24], rsi
	mov	QWORD PTR [rax+32], rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
	mov	r12, rcx
	mov	ebp, edx
	lea	rcx, OFFSET FLAT:__AB4B9627_Source@cpp
	call	__CheckForDebuggerJustMyCode
	xor	ebx, ebx
	lea	esi, DWORD PTR [rbp-1]
	test	esi, esi
	jle	SHORT $LN13@SortTheArr
$LL4@SortTheArr:

; 26   :     {
; 27   :         swapped = false;

	xor	r8b, r8b

; 28   :         for (int j = 0; j < size - i - 1; ++j)

	mov	eax, ebp
	sub	eax, ebx
	dec	eax
	test	eax, eax
	jle	SHORT $LN13@SortTheArr

; 26   :     {
; 27   :         swapped = false;

	mov	rdx, r12
	mov	r14d, eax
	mov	rcx, r12
$LL7@SortTheArr:

; 29   :         {
; 30   :             if (data[j] > data[j + 1])

	lea	r15, QWORD PTR [rdx+4]
	mov	eax, DWORD PTR [r15]
	lea	rdi, QWORD PTR [rcx+4]
	cmp	DWORD PTR [rdx], eax
	jle	SHORT $LN20@SortTheArr

; 31   :             {
; 32   :                 std::swap(data[j], data[j + 1]);

	mov	rdx, rdi
	call	??$swap@H$0A@@std@@YAXAEAH0@Z		; std::swap<int,0>

; 33   :                 swapped = true;

	mov	r8b, 1
$LN20@SortTheArr:

; 28   :         for (int j = 0; j < size - i - 1; ++j)

	mov	rcx, rdi
	mov	rdx, r15
	sub	r14, 1
	jne	SHORT $LL7@SortTheArr

; 34   :             }
; 35   :         }
; 36   :         if (!swapped)

	test	r8b, r8b
	je	SHORT $LN13@SortTheArr

; 24   :     bool swapped;
; 25   :     for (int i = 0; i < size - 1; ++i)

	inc	ebx
	cmp	ebx, esi
	jl	SHORT $LL4@SortTheArr
$LN13@SortTheArr:

; 37   :         {
; 38   :             break;
; 39   :         }
; 40   :     }
; 41   : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r12
	ret	0
?SortTheArray@@YAXQEAHH@Z ENDP				; SortTheArray
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Users\jhall\Desktop\Project2\Project2\Source.cpp
;	COMDAT ?FillWithRandomNumbers@@YAXQEAHH@Z
_TEXT	SEGMENT
data$ = 48
size$ = 56
?FillWithRandomNumbers@@YAXQEAHH@Z PROC			; FillWithRandomNumbers, COMDAT

; 13   : {

$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	movsxd	rdi, edx
	lea	rcx, OFFSET FLAT:__AB4B9627_Source@cpp
	call	__CheckForDebuggerJustMyCode
	xor	ecx, ecx
	call	time
	mov	rcx, rax
	call	QWORD PTR __imp_srand
	xor	ebx, ebx
	test	rdi, rdi
	jle	SHORT $LN3@FillWithRa
$LL4@FillWithRa:

; 14   :     std::srand(static_cast<unsigned>(std::time(nullptr)));
; 15   :     for (int i = 0; i < size; ++i)
; 16   :     {
; 17   :         data[i] = std::rand() % 100001;

	call	QWORD PTR __imp_rand
	mov	r8d, eax
	mov	eax, 703680405				; 29f14f95H
	imul	r8d
	sar	edx, 14
	mov	ecx, edx
	shr	ecx, 31
	add	edx, ecx
	imul	ecx, edx, 100001			; 000186a1H
	sub	r8d, ecx
	mov	DWORD PTR [rsi+rbx*4], r8d
	inc	rbx
	cmp	rbx, rdi
	jl	SHORT $LL4@FillWithRa
$LN3@FillWithRa:

; 18   :     }
; 19   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?FillWithRandomNumbers@@YAXQEAHH@Z ENDP			; FillWithRandomNumbers
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\utility
;	COMDAT ??$swap@H$0A@@std@@YAXAEAH0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$swap@H$0A@@std@@YAXAEAH0@Z PROC			; std::swap<int,0>, COMDAT

; 128  :     is_nothrow_move_constructible_v<_Ty>&& is_nothrow_move_assignable_v<_Ty>) {

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, rdx
	lea	rcx, OFFSET FLAT:__BC4BF2DD_utility
	call	__CheckForDebuggerJustMyCode
	mov	r8d, DWORD PTR [rbx]
	mov	eax, DWORD PTR [rdi]
	mov	DWORD PTR [rbx], eax
	mov	rbx, QWORD PTR [rsp+48]
	mov	DWORD PTR [rdi], r8d

; 129  :     _Ty _Tmp = _STD move(_Left);
; 130  :     _Left    = _STD move(_Right);
; 131  :     _Right   = _STD move(_Tmp);
; 132  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$swap@H$0A@@std@@YAXAEAH0@Z ENDP			; std::swap<int,0>
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h
;	COMDAT time
_TEXT	SEGMENT
_Time$ = 48
time	PROC						; COMDAT

; 551  :         {

	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__0A9237D2_time@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx

; 552  :             return _time64(_Time);
; 553  :         }

	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp__time64
time	ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 471  :     _NODISCARD static constexpr int_type eof() noexcept {

$LN6:
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__A20D1782_xstring
	call	__CheckForDebuggerJustMyCode
	or	eax, -1

; 472  :         return static_cast<int_type>(EOF);
; 473  :     }

	add	rsp, 40					; 00000028H
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 463  :     _NODISCARD static constexpr bool eq_int_type(const int_type _Left, const int_type _Right) noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, ecx
	mov	edi, edx
	lea	rcx, OFFSET FLAT:__A20D1782_xstring
	call	__CheckForDebuggerJustMyCode
	cmp	ebx, edi
	mov	rbx, QWORD PTR [rsp+48]
	sete	al

; 464  :         return _Left == _Right;
; 465  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogspy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 385  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__A20D1782_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx

; 386  :         // find length of null-terminated string
; 387  : #if _HAS_CXX17
; 388  : #ifdef __cpp_char8_t
; 389  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 390  : #if _HAS_U8_INTRINSICS
; 391  :             return __builtin_u8strlen(_First);
; 392  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 393  :             return _Primary_char_traits::length(_First);
; 394  : #endif // ^^^ no u8 intrinsics ^^^
; 395  :         } else
; 396  : #endif // defined(__cpp_char8_t)
; 397  :         {
; 398  :             return __builtin_strlen(_First);
; 399  :         }
; 400  : #else // ^^^ _HAS_CXX17 / !_HAS_CXX17 vvv
; 401  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 402  : #endif // ^^^ !_HAS_CXX17 ^^^
; 403  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	strlen
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Users\jhall\Desktop\Project2\Project2\Source.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
	lea	rcx, OFFSET FLAT:__AB4B9627_Source@cpp
	jmp	__CheckForDebuggerJustMyCode
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Users\jhall\Desktop\Project2\Project2\Source.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 8
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
	lea	rcx, OFFSET FLAT:__AB4B9627_Source@cpp
	jmp	__CheckForDebuggerJustMyCode
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END